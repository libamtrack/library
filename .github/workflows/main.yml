name: Linux and Windows Tests

on:
  push:
    branches: [ master ]
    tags: ['v*']
  pull_request:
    branches: [ master ]
  release:
    types: [published]

jobs:
  build_and_test_linux:
    if: "github.repository == 'libamtrack/library' && !contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]')"
    name: Compile and test library on Linux
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      
    - name: install necessary packages
      run: sudo apt-get -y install libgsl-dev
        
    - name: compile and install
      run: |
        mkdir build
        cd build
        cmake ..  -DCMAKE_BUILD_TYPE=Release 
        cmake --build . --parallel
        cmake --install . --prefix $HOME/.local
      
    - name: tests
      run: |
        LD_LIBRARY_PATH="$HOME/.local/lib:$LD_LIBRARY_PATH" amtrack_test
        LD_LIBRARY_PATH="$HOME/.local/lib:$LD_LIBRARY_PATH" amtrack_demo
  
  build_and_test_windows:
    if: "github.repository == 'libamtrack/library' && !contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]')"
    name: Compile and test library on Windows
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install vcpkg
      run: |
        git clone --depth 1 https://github.com/microsoft/vcpkg
        .\vcpkg\bootstrap-vcpkg.bat -disableMetrics

    - name: Install dependencies
      run: .\vcpkg\vcpkg.exe install

    - name: Set up vcpkg path
      run: echo "VCPKG_ROOT=$(pwd)\vcpkg" >> $GITHUB_ENV

    - name: Check Visual Studio installations
      shell: cmd
      run: |
        "C:\Program Files (x86)\Microsoft Visual Studio\Installer\vswhere.exe" -all

    - name: make build dir
      run: mkdir build

    - name: Compile and install
      env:
        CMAKE_PREFIX_PATH: ../vcpkg_installed/x64-windows
        GSL_DIR: ../vcpkg_installed/x64-windows
        GETOPT_DIR: ../vcpkg_installed/x64-windows
      working-directory: build
      run: |
        cmake .. -DCMAKE_BUILD_TYPE=Release -G "Visual Studio 17 2022" -A x64
        cmake --build . --parallel --config Release
        cmake --install . --prefix ../.local --config Release

    - name: tests
      run: |
        $env:Path += ";$env:GITHUB_WORKSPACE/.local/bin"
        amtrack_test
        amtrack_demo

  javascript_package:
    if: "github.repository == 'libamtrack/library' && !contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    needs: [build_and_test_linux, build_and_test_windows]
    steps:
      - uses: actions/checkout@v4
      
      - uses: mymindstorm/setup-emsdk@v14

      - name: Cache compiled GSL
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          path: $HOME/usr
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/main.yml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Compile GSL
        run: |
          wget -q "http://ftpmirror.gnu.org/gnu/gsl/gsl-latest.tar.gz"
          mkdir $HOME/gsl-latest
          tar -xzf gsl-latest.tar.gz -C $HOME/gsl-latest
          mv $HOME/gsl-latest/** $HOME/gsl-latest/gsl
          mkdir $HOME/usr
          cd $HOME/gsl-latest/gsl/ && emconfigure ./configure --prefix=$HOME/usr --disable-shared && emmake make -j && emmake make install
          ls -al $HOME/usr/lib/
          
      - name: Compile libamtrack webassembly package
        run: |          
         GSL_INCLUDE_DIRS=$HOME/usr/include GSL_LIBRARY=$HOME/usr/lib/libgsl.a GSL_CBLAS_LIBRARY=$HOME/usr/lib/libgslcblas.a  ./compile_to_js.sh
        working-directory: distributions/JavaScript
  
      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v4
        with:
          name: wasm file
          path: |
            distributions/JavaScript/output/libat.wasm
            distributions/JavaScript/output/libat.js
          if-no-files-found: error
          retention-days: 5
