name: Linux Tests

on:
  push:
    branches: [ master ]
    tags: '*'
  pull_request:
    branches: [ master ]
  release:
    types: [published]

jobs:
  build_and_test:
    if: "github.repository == 'libamtrack/library' && !contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]')"
    name: Compile and test library
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      
    - name: install necessary packages
      run: |
        sudo apt-get -y install libgsl-dev
        
    - name: compile and install
      run: |
        mkdir build
        cd build
        cmake  -DCMAKE_BUILD_TYPE=Release ../ -DCMAKE_INSTALL_PREFIX=$HOME/usr
        cmake --build . --target install -- -j2
      
    - name: tests
      run: |
        LD_LIBRARY_PATH=$HOME/usr/lib $HOME/usr/bin/amtrack_test
        LD_LIBRARY_PATH=$HOME/usr/lib $HOME/usr/bin/amtrack_demo
  
  javascript_package:
    if: "github.repository == 'libamtrack/library' && !contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    needs: [build_and_test]
    steps:
      - uses: mymindstorm/setup-emsdk@v7

      - name: Verify
        run: emcc -v
  
  python_package:
    if: "github.repository == 'libamtrack/library' && !contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]')"
    name: Make and test python bindings
    
    runs-on: ubuntu-latest
    
    needs: [build_and_test]
    
    steps:
    - uses: actions/checkout@v2

    - name: make python package
      run: sudo ./make_wheel_package.sh
      working-directory: distributions/Python/pyamtrack

    - name: test python package
      run: sudo ./test_wheel_package.sh
      working-directory: distributions/Python/pyamtrack

    - name: publish package to pypi
      uses: pypa/gh-action-pypi-publish@v1.4.2
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      with:
        # Password for your PyPI user or an access token
        password: ${{ secrets.TWINE_PASSWORD }}
        # The repository URL to use
        repository_url: "https://upload.pypi.org/legacy/"
        # The target directory for distribution
        packages_dir: distributions/Python/pyamtrack/generated/dist/wheelhouse/
        # Show verbose output.
        verbose: true
