name: Linux Tests

on:
  push:
    branches: [ master ]
    tags: '*'
  pull_request:
    branches: [ master ]
  release:
    types: [published]

jobs:
  build_and_test:
    if: "github.repository == 'libamtrack/library' && !contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]')"
    name: Compile and test library
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      
    - name: install necessary packages
      run: |
        sudo apt-get -y install libgsl-dev
        
    - name: compile and install
      run: |
        mkdir build
        cd build
        cmake  -DCMAKE_BUILD_TYPE=Release ../ -DCMAKE_INSTALL_PREFIX=$HOME/usr
        cmake --build . --target install -- -j2
      
    - name: tests
      run: |
        LD_LIBRARY_PATH=$HOME/usr/lib $HOME/usr/bin/amtrack_test
        LD_LIBRARY_PATH=$HOME/usr/lib $HOME/usr/bin/amtrack_demo
  
  javascript_package:
    if: "github.repository == 'libamtrack/library' && !contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    needs: [build_and_test]
    steps:
      - uses: actions/checkout@v2
      
      - uses: mymindstorm/setup-emsdk@v7

      - name: Cache compiled GSL
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: $HOME/usr
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/main.yml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Compile GSL
        run: |
          pwd
          ls -al
          wget -q "http://ftpmirror.gnu.org/gnu/gsl/gsl-latest.tar.gz"
          mkdir $HOME/gsl-latest
          tar -xzf gsl-latest.tar.gz -C $HOME/gsl-latest
          mv $HOME/gsl-latest/** $HOME/gsl-latest/gsl
          mkdir $HOME/usr
          cd $HOME/gsl-latest/gsl/ && emconfigure ./configure --prefix=$HOME/usr --disable-shared && emmake make -j2 && emmake make install
          ls $HOME/usr
          GSL_INCLUDE_DIRS=$HOME/usr/include GSL_LIBRARY=$HOME/usr/lib/libgsl.a GSL_CBLAS_LIBRARY=$HOME/usr/lib/libgslcblas.a  ./compile_to_js.sh
  
  python_package:
    if: "github.repository == 'libamtrack/library' && !contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]')"
    name: Make and test python bindings
    
    runs-on: ubuntu-latest
    
    needs: [build_and_test]
    
    steps:
    - uses: actions/checkout@v2

#     - name: make python package
#       run: sudo ./make_wheel_package.sh
#       working-directory: distributions/Python/pyamtrack

#     - name: test python package
#       run: sudo ./test_wheel_package.sh
#       working-directory: distributions/Python/pyamtrack

#     - name: publish package to pypi
#       uses: pypa/gh-action-pypi-publish@v1.4.2
#       if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
#       with:
#         # Password for your PyPI user or an access token
#         password: ${{ secrets.TWINE_PASSWORD }}
#         # The repository URL to use
#         repository_url: "https://upload.pypi.org/legacy/"
#         # The target directory for distribution
#         packages_dir: distributions/Python/pyamtrack/generated/dist/wheelhouse/
#         # Show verbose output.
#         verbose: true
